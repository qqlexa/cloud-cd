name: Deploy FastAPI to AWS EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Clone the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Deploy to EC2 instance
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }} # Public IP of your EC2 instance
        username: ${{ secrets.EC2_USER }} # SSH username (e.g., ec2-user)
        key: ${{ secrets.EC2_PRIVATE_KEY }} # Private SSH key
        script: |
          # Update the system
          sudo yum update -y || sudo apt update -y

          # Install git if not installed
          if ! command -v git &> /dev/null; then
            echo "Installing git..."
            sudo yum install -y git || sudo apt install -y git
          fi

          # Install Docker if not installed
          if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            sudo yum install -y docker || sudo apt install -y docker.io
            sudo service docker start || sudo systemctl start docker
            sudo usermod -aG docker $USER
            newgrp docker # Reload group without logging out
          fi

          # Set up the project directory
          PROJECT_DIR="/home/ec2-user/fastapi-app"
          sudo mkdir -p $PROJECT_DIR
          sudo chown $USER:$USER $PROJECT_DIR
          cd $PROJECT_DIR

          # Pull the latest code from GitHub
          if [ ! -d ".git" ]; then
            git init
            git remote add origin git@github.com:${{ github.repository }}.git
          fi
          git fetch origin
          git reset --hard origin/master

          # Build the Docker image
          sudo docker build -t fastapi-app:latest .

          # Stop and remove any existing container
          sudo docker stop fastapi-app || true
          sudo docker rm fastapi-app || true

          # Run the new container
          sudo docker run -d -p 80:8000 --name fastapi-app fastapi-app:latest

          echo "Deployment completed!"
