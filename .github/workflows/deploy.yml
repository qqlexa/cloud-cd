name: Deploy FastAPI to AWS EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Clone the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Build Docker image using GitHub Actions
    - name: Build Docker image
      run: |
        docker build -t fastapi-app:latest .

    # Save Docker image as .tar file
    - name: Save Docker image
      run: |
        docker save -o fastapi-app.tar fastapi-app:latest

    # Set up SSH key for authentication
    - name: Set up SSH key for EC2
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

    # Transfer Docker image to EC2 using SCP
    - name: Transfer Docker image to EC2
      run: |
        scp -o StrictHostKeyChecking=no fastapi-app.tar ${{ secrets.EC2_USER }}@${{ secrets.EC2_PUBLIC_IP }}:/home/${{ secrets.EC2_USER }}/fastapi-app.tar

    # Deploy to EC2
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }} # Public IP of your EC2 instance
        username: ${{ secrets.EC2_USER }} # SSH username (e.g., ec2-user)
        key: ${{ secrets.EC2_PRIVATE_KEY }} # Private SSH key
        script: |
          # Update the system
          sudo yum update -y || sudo apt update -y

          # Install Docker if not installed
          if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            sudo yum install -y docker || sudo apt install -y docker.io
            sudo service docker start || sudo systemctl start docker
            sudo usermod -aG docker $USER
            newgrp docker # Reload group without logging out
          fi

          # Set up the project directory
          PROJECT_DIR="/home/ec2-user/fastapi-app"
          sudo mkdir -p $PROJECT_DIR
          sudo chown $USER:$USER $PROJECT_DIR
          cd $PROJECT_DIR

          # Load the Docker image
          sudo docker load -i /home/${{ secrets.EC2_USER }}/fastapi-app.tar

          # Stop and remove any existing container
          sudo docker stop fastapi-app || true
          sudo docker rm fastapi-app || true

          # Run the new container
          sudo docker run -d -p 80:8000 --name fastapi-app fastapi-app:latest

          echo "Deployment completed!"
